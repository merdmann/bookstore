import { BulletLabelStyleModel } from './bullet-base-model';
import { ChildProperty } from '@syncfusion/ej2-base';
import { BorderModel } from '../../common/model/base-model';
import { Alignment, TextOverflow } from '../../common/utils/enum';
/**
 * Configuration of the bullet chart ranges
 */
export declare class Range extends ChildProperty<Range> {
    /**
     * Default value for qualitative range end value
     * @default null
     */
    end: number;
    /**
     * Range opacity
     * @default 1
     */
    opacity: number;
    /**
     * Default value for qualitative range Color
     * @default null
     */
    color: string;
}
/**
 * Configures the major tick lines.
 */
export declare class MajorTickLinesSettings extends ChildProperty<MajorTickLinesSettings> {
    /**
     * The height of the tick lines in pixels.
     * @default 12
     */
    height: number;
    /**
     * The width of the ticks in pixels.
     * @default 2
     */
    width: number;
    /**
     * The stroke of the major tick line that accepts value in hex and rgba as a valid CSS color string.
     * @default null
     */
    color: string;
    /**
     * It uses to apply range color to ticks and labels.
     * @default false
     */
    useRangeColor: boolean;
}
/**
 * Configures the minor tick lines.
 */
export declare class MinorTickLinesSettings extends ChildProperty<MinorTickLinesSettings> {
    /**
     * The height of the tick lines in pixels.
     * @default 8
     */
    height: number;
    /**
     * The width of the ticks in pixels.
     * @default 2
     */
    width: number;
    /**
     * The stroke of the major tick line that accepts value in hex and rgba as a valid CSS color string.
     * @default null
     */
    color: string;
    /**
     * It uses to apply range color to ticks and labels.
     * @default false
     */
    useRangeColor: boolean;
}
/**
 * Configures the fonts in bullet chart.
 */
export declare class BulletLabelStyle extends ChildProperty<BulletLabelStyle> {
    /**
     * FontStyle for the text.
     * @default 'Normal'
     */
    fontStyle: string;
    /**
     * Font size for the text.
     * @default '16px'
     */
    size: string;
    /**
     * Color for the text.
     * @default ''
     */
    color: string;
    /**
     * FontWeight for the text.
     * @default 'Normal'
     */
    fontWeight: string;
    /**
     * FontFamily for the text.
     */
    fontFamily: string;
    /**
     * Text alignment
     * @default 'Center'
     */
    textAlignment: Alignment;
    /**
     * Specifies the chart title text overflow
     * @default 'Trim'
     */
    textOverflow: TextOverflow;
    /**
     * Opacity for the text.
     * @default 1
     */
    opacity: number;
    /**
     * Default value of enable trim.
     * @default true
     */
    enableTrim: boolean;
    /**
     * Maximum label width of the bullet chart
     * @default null
     */
    maximumTitleWidth: number;
    /**
     * Range color
     * @default false
     */
    useRangeColor: boolean;
}
/**
 * Configures the ToolTips in the bullet chart.
 */
export declare class BulletTooltipSettings extends ChildProperty<BulletTooltipSettings> {
    /**
     * Enables / Disables the visibility of the tooltip.
     * @default true.
     */
    enable: boolean;
    /**
     * The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.
     * @default null
     */
    fill: string;
    /**
     * Options to customize the ToolTip text.
     */
    textStyle: BulletLabelStyleModel;
    /**
     * Options to customize tooltip borders.
     */
    border: BorderModel;
    /**
     * The default value of tooltip template .
     * @default null
     */
    template: string;
}
/**
 * Configures the DataLabel in the bullet chart.
 */
export declare class BulletDataLabel extends ChildProperty<BulletDataLabel> {
    /**
     * Enables / Disables the visibility of the data label.
     * @default false.
     */
    enable: boolean;
    /**
     * Options to customize the data label text.
     */
    labelStyle: BulletLabelStyleModel;
}
